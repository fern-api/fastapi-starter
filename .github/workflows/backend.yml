name: "Backend"

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v3

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: mypy
        run: | 
          source .venv/bin/activate
          mypy
      
  
  # dockerize:
  #   runs-on: ubuntu-latest
  #   if: ${{ env.GITHUB_REF == 'refs/heads/main' }}
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: actions/setup-python@v3
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #     - name: Install dependencies
  #       run: poetry install
  #     - name: Install dependencies
  #       run: poetry install
  #     - name: Docker build
  #       run: | 
  #         docker build -f Dockerfile -t "server" .